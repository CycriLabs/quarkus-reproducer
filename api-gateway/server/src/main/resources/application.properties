# Service configuration
quarkus.http.port=3333
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=*

# Dev services
quarkus.devservices.enabled=false

# OIDC configuration
quarkus.oidc.auth-server-url=${OIDC.AUTH-SERVER-URL}
quarkus.oidc.tenant-id=default
quarkus.oidc.client-id=api-gateway
quarkus.oidc.credentials.secret=${OIDC.CREDENTIALS-SECRET}
quarkus.oidc.roles.source=accesstoken
quarkus.oidc.application-type=service
quarkus.security.jaxrs.default-roles-allowed=**

## OIDC client configuration
quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}

# Consul configuration
service-discovery.type=consul
load-balancer.type=round-robin
consul.host=localhost
consul.port=8500
## service-a service
quarkus.stork.service-a-server.service-discovery.type=${service-discovery.type}
quarkus.stork.service-a-server.service-discovery.consul-host=${consul.host}
quarkus.stork.service-a-server.service-discovery.consul-port=${consul.port}
%dev.quarkus.stork.service-a-server.service-discovery.refresh-period=5
quarkus.stork.service-a-server.load-balancer.type=${load-balancer.type}

# Hibernate configuration
## Setting this to true avoids a compile error when using @ConvertGroup in validation
## See https://github.com/quarkusio/quarkus/issues/8668 for more details
quarkus.hibernate-validator.method-validation.allow-overriding-parameter-constraints=true

# RESTEasy configuration
## Setting this to true hides additional internal infos of the exception message that are added by
## RESTEasy when a REST client call fails
quarkus.rest-client.disable-contextual-error-messages=true
